image: node:14-alpine

variables:
    DEPLOY_IMAGE: "$CI_REGISTRY_IMAGE:$CI_PIPELINE_ID"
    SCAN_IMAGE: "$CI_REGISTRY_IMAGE:$CI_PIPELINE_ID-scan"
    SONAR_PROJECT_KEY: connect-react-native
    SONAR_TOKEN: $SONAR_LOGIN
    SONAR_URL: $SONAR_HOST_URL

stages:
  - install
  - build
  - test
  - scan
  - publish

dependencies:
  stage: install
  script:
    - npm ci
  cache:
    key: ${CI_COMMIT_REF_SLUG}
    paths:
      - node_modules/

build:
  stage: build
  script:
    - npm run build
  cache:
    key: ${CI_COMMIT_REF_SLUG}
    paths:
      - node_modules/
    policy: pull
  artifacts:
    paths:
      - dist/

# test:unit-tests:
#   stage: test
#   script:
#     - npm run test
#   cache:
#     key: ${CI_COMMIT_REF_SLUG}
#     paths:
#       - node_modules/
#     policy: pull

# test:lint:
#   stage: test
#   script:
#     - npm run lint
#   cache:
#     key: ${CI_COMMIT_REF_SLUG}
#     paths:
#       - node_modules/
#     policy: pull

# test:coverage:
#   stage: test
#   cache:
#     key: ${CI_COMMIT_REF_SLUG}
#     paths:
#       - node_modules/
#     policy: pull
#   script:
#     - npm run test:coverage
#   artifacts:
#     when: always  
#     paths:
#       - coverage
#     expire_in: 1 days

# test:version_bump:
#   stage: test
#   script:
#     - npm run test:version_bump

checkmarx:manual:
  stage: scan
  image:
    name: dcr.fini.city/images/cx-flow/master:latest
  when: manual
  before_script: []
  script:
    - java -noverify
      -XX:+UnlockExperimentalVMOptions
      -XX:+UseContainerSupport
      -Djava.security.egd=file:/dev/./urandom
      -jar /usr/src/app/cx-flow.jar
      --spring.config.location=/usr/src/app/config.yml
      --scan
      --app=${CI_PROJECT_PATH_SLUG}
      --cx-project=${CI_PROJECT_PATH_SLUG}
      --repo-url=${CI_PROJECT_URL}/
      --branch=${CI_COMMIT_REF_NAME}
      --f=.
  cache: {}
  dependencies: []

checkmarx:
  extends: checkmarx:manual
  only:
    - master
  when: on_success

scan:sonarqube:
  stage: scan
  image: ciricihq/gitlab-sonar-scanner
  variables:
    SONAR_ANALYSIS_MODE: publish
  except:
    variables:
    - $CI_COMMIT_MESSAGE =~ /^WIP.*/
  script:
    - gitlab-sonar-scanner
  allow_failure: true 

publish:
  stage: publish
  only:
    - master
  script:
    - echo -e "registry=http://registry.fini.city:8081/repository/npm-private/\n//registry.fini.city:8081/repository/npm-private/:_authToken=${NPM_AUTH_TOKEN}" > ./.npmrc
    - npm install
    - npm run build
    - echo "Make sure you updated the version in package.json or it will not update private npm"
    - npm publish --registry=http://registry.fini.city:8081/repository/npm-private/
  cache:
    key: ${CI_COMMIT_REF_SLUG}
    paths:
      - node_modules/
    policy: pull
