{"version":3,"sources":["index.tsx"],"names":["React","Component","Modal","Platform","WebView","InAppBrowser","ConnectEvents","CONNECT_SDK_VERSION","SDK_PLATFORM","PING_TIMEOUT","defaultEventHandlers","onLoad","event","onUser","onRoute","FinicityConnect","constructor","props","connectUrl","pingingConnect","pingedConnectSuccessfully","pingIntervalId","eventHandlers","browserDisplayed","linkingUri","state","onCancel","code","reason","webViewRef","postMessage","type","PING","sdkVersion","platform","stopPingingConnect","setInterval","pingConnect","clearInterval","closed","closeAuth","url","isAvailable","openAuth","dismissBrowser","eventData","parseEventData","nativeEvent","data","eventType","URL","openBrowser","CLOSE_POPUP","ACK","LOADED","CANCEL","DONE","onDone","ERROR","onError","ROUTE","USER","launch","JSON","stringify","render","OS","close","ref","uri","handleEvent","startPingingConnect","parse","e"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Modal, Platform } from 'react-native';\nimport { WebView } from 'react-native-webview';\nimport { InAppBrowser } from 'react-native-inappbrowser-reborn';\nimport {\n  ConnectEvents,\n  CONNECT_SDK_VERSION,\n  SDK_PLATFORM,\n  PING_TIMEOUT,\n} from './constants';\n\nexport interface ConnectEventHandlers {\n  onLoad?: Function;\n  onDone: Function;\n  onCancel: Function;\n  onError: Function;\n  onUser?: Function;\n  onRoute?: Function;\n}\n\nconst defaultEventHandlers: any = {\n  onLoad: (event: any) => {},\n  onUser: (event: any) => {},\n  onRoute: (event: any) => {},\n};\n\nexport interface FinicityConnectProps {\n  connectUrl: string;\n  eventHandlers: ConnectEventHandlers;\n  linkingUri?: string;\n}\n\nexport class FinicityConnect extends Component<FinicityConnectProps> {\n  webViewRef: WebView | null = null;\n  state = {\n    connectUrl: '',\n    pingingConnect: false,\n    pingedConnectSuccessfully: false,\n    pingIntervalId: 0,\n    eventHandlers: defaultEventHandlers,\n    browserDisplayed: false,\n    linkingUri: '',\n  };\n\n  constructor(props: FinicityConnectProps) {\n    super(props);\n    this.launch(props.connectUrl, props.eventHandlers, props.linkingUri);\n  }\n\n  launch = (\n    connectUrl: string,\n    eventHandlers: ConnectEventHandlers,\n    linkingUri = ''\n  ) => {\n    this.state.connectUrl = connectUrl;\n    this.state.eventHandlers = { ...defaultEventHandlers, ...eventHandlers };\n    this.state.linkingUri = linkingUri;\n  };\n\n  close = () => {\n    this.state.eventHandlers.onCancel({\n      code: 100,\n      reason: 'exit',\n    });\n  };\n\n  postMessage(eventData: any) {\n    this.webViewRef?.postMessage(JSON.stringify(eventData));\n  }\n\n  pingConnect = () => {\n    if (this.webViewRef !== null) {\n      this.postMessage({\n        type: ConnectEvents.PING,\n        sdkVersion: CONNECT_SDK_VERSION,\n        platform: SDK_PLATFORM,\n      });\n    } else {\n      this.stopPingingConnect();\n    }\n  };\n\n  startPingingConnect = () => {\n    if (\n      this.webViewRef !== null &&\n      !this.state.pingedConnectSuccessfully &&\n      !this.state.pingingConnect &&\n      this.state.pingIntervalId === 0\n    ) {\n      this.state.pingingConnect = true;\n      (this.state.pingIntervalId as any) = setInterval(\n        this.pingConnect,\n        PING_TIMEOUT\n      );\n    }\n  };\n\n  stopPingingConnect = () => {\n    if (this.state.pingingConnect && this.state.pingIntervalId != 0) {\n      clearInterval(this.state.pingIntervalId);\n      this.state.pingingConnect = false;\n      this.state.pingIntervalId = 0;\n    }\n  };\n\n  dismissBrowser = () => {\n    if (this.state.browserDisplayed) {\n      this.postMessage({ type: 'window', closed: true });\n      this.state.browserDisplayed = false;\n      InAppBrowser.closeAuth();\n    }\n  };\n\n  openBrowser = async (url: string) => {\n    this.state.browserDisplayed = true;\n    await InAppBrowser.isAvailable();\n    await InAppBrowser.openAuth(url, this.state.linkingUri);\n    this.dismissBrowser();\n  };\n\n  handleEvent = (event: any) => {\n    const eventData = parseEventData(event.nativeEvent.data);\n    const eventType = eventData.type;\n    if (eventType === ConnectEvents.URL && !this.state.browserDisplayed) {\n      const url = eventData.url;\n      this.openBrowser(url);\n    } else if (\n      eventType === ConnectEvents.CLOSE_POPUP &&\n      this.state.browserDisplayed\n    ) {\n      this.dismissBrowser();\n    } else if (eventType === ConnectEvents.ACK) {\n      this.state.pingedConnectSuccessfully = true;\n      this.stopPingingConnect();\n      const eventData = { type: ConnectEvents.LOADED, data: null };\n      this.state.eventHandlers.onLoad(eventData);\n    } else if (eventType === ConnectEvents.CANCEL) {\n      this.state.eventHandlers.onCancel(eventData);\n    } else if (eventType === ConnectEvents.DONE) {\n      this.state.eventHandlers.onDone(eventData);\n    } else if (eventType === ConnectEvents.ERROR) {\n      this.state.eventHandlers.onError(eventData);\n    } else if (eventType === ConnectEvents.ROUTE) {\n      this.state.eventHandlers.onRoute(eventData);\n    } else if (eventType === ConnectEvents.USER) {\n      this.state.eventHandlers.onUser(eventData);\n    }\n  };\n\n  render() {\n    return (\n      <Modal\n        animationType={'slide'}\n        presentationStyle={Platform.OS === 'ios' ? 'pageSheet' : 'fullScreen'}\n        transparent={false}\n        onRequestClose={() => this.close()}\n      >\n        <WebView\n          ref={(ref: any) => (this.webViewRef = ref)}\n          source={{ uri: this.state.connectUrl }}\n          onMessage={(event) => this.handleEvent(event)}\n          onLoad={() => this.startPingingConnect()}\n        />\n      </Modal>\n    );\n  }\n}\n\nfunction parseEventData(eventData: any) {\n  try {\n    return typeof eventData === 'string' ? JSON.parse(eventData) : eventData;\n  } catch (e) {\n    return {};\n  }\n}\n"]}